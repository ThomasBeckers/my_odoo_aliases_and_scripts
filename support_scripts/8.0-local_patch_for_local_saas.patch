From 3237f27ad6ce7df8637134d3c3d452476b0aaf3b Mon Sep 17 00:00:00 2001
From: MOENS Alexandre <mao@odoo.com>
Date: Wed, 27 Jun 2018 11:31:28 +0200
Subject: [PATCH] 8.0: local patch for SESSION INJECTION DEV

---
 openerp/http.py       |  3 ++-
 openerp/service/db.py | 26 ++++++++++++++++++++++++++
 2 files changed, 28 insertions(+), 1 deletion(-)

diff --git a/openerp/http.py b/openerp/http.py
index 18b91b94e20..1d28ec61e30 100644
--- a/openerp/http.py
+++ b/openerp/http.py
@@ -1467,7 +1467,8 @@ class Root(object):
         return request.registry['ir.http'].routing_map()
 
 def db_list(force=False, httprequest=None):
-    dbs = dispatch_rpc("db", "list", [force])
+    # dbs = dispatch_rpc("db", "list", [force])
+    dbs = openerp.service.db.exp_list_patch(force)
     return db_filter(dbs, httprequest=httprequest)
 
 def db_filter(dbs, httprequest=None):
diff --git a/openerp/service/db.py b/openerp/service/db.py
index 8d7576c9974..cd707500f1d 100644
--- a/openerp/service/db.py
+++ b/openerp/service/db.py
@@ -330,6 +330,32 @@ def exp_list(document=False):
     res.sort()
     return res
 
+def exp_list_patch(document=False):
+    if not openerp.tools.config['list_db'] and not document:
+        raise openerp.exceptions.AccessDenied()
+    chosen_template = openerp.tools.config['db_template']
+    templates_list = tuple(set(['template0', 'template1', 'postgres', chosen_template]))
+    db = openerp.sql_db.db_connect('postgres')
+    with closing(db.cursor()) as cr:
+        try:
+            db_user = openerp.tools.config["db_user"]
+            if not db_user and os.name == 'posix':
+                import pwd
+                db_user = pwd.getpwuid(os.getuid())[0]
+            if not db_user:
+                cr.execute("select usename from pg_user where usesysid=(select datdba from pg_database where datname=%s)", (openerp.tools.config["db_name"],))
+                res = cr.fetchone()
+                db_user = res and str(res[0])
+            if db_user:
+                cr.execute("select datname from pg_database where datdba=(select usesysid from pg_user where usename=%s) and datname not in %s order by datname", (db_user, templates_list))
+            else:
+                cr.execute("select datname from pg_database where datname not in %s order by datname", (templates_list,))
+            res = [openerp.tools.ustr(name) for (name,) in cr.fetchall()]
+        except Exception:
+            res = []
+    res.sort()
+    return res
+
 def exp_change_admin_password(new_password):
     openerp.tools.config['admin_passwd'] = new_password
     openerp.tools.config.save()
-- 
2.17.1

