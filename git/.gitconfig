[user]
	name = Moens Alexandre
	email = mao@odoo.com
	signingKey = DD1DCA797C7B5947
[core]
	excludesfile = /home/odoo/.gitignore_global
	editor = vim
[alias]
    hist = log --graph --all --date=short --pretty=format:'%C(dim white)%h%Creset%C(auto)%d%Creset %s %C(blue)<%an> %C(dim green)(%cd)%Creset%n'
    alias = ! sed -n '/^\\[alias]$/, /^\\[.*]$/p' ~/.gitconfig | sed '$d'
    # expected format: git get-br mart-e:patch-42
    # where "mart-e:patch-42" is the source in the description of the PR
    # if the remote is not present, add it
    # fetch the branch and checkout
    # source : https://github.com/mart-e/odoo-scripts/blob/master/git/config#L25-L72
    get-br = "!f() {\
        remote=`echo $1 | cut -d ":" -f1`; \
        branch=`echo $1 | cut -d ":" -f2`; \
        \
        localbranch=`git symbolic-ref -q --short HEAD`; \
        localremote=`git config branch.$localbranch.remote`; \
        if [ -z $localremote ]; then { \
            echo "Branch $localbranch is not linked to any remote, can not guess the URL for the remote $remote."; \
            echo "Set a remote or switch to the current branch."; \
            exit; \
        } fi; \
        \
        localurl=`git config remote.$localremote.url`; \
        \
        remoteurlpresent=`git config remote.$remote.url`; \
        if [ -z $remoteurlpresent ]; then {  \
            \
            lefturl='git@github.com:'; \
            righturl=`echo $localurl | cut -d "/" -f2`; \
            \
            isssh=`echo $localurl | grep 'git@' | wc -l`; \
            [ $isssh -eq 0 ] && { \
                lefturl='https://github.com/'; \
                righturl=`echo $localurl | cut -d "/" -f5`; \
            }; \
            \
            newurl="$lefturl$remote/$righturl"; \
            git remote add $remote "$newurl"; \
            \
        } fi; \
        remotebranchpresent=`git config branch.$branch.remote`; \
        git fetch $remote $branch; \
        if [ -z $remotebranchpresent ]; then {  \
            git branch $branch $remote/$branch; \
        } elif [ "$remotebranchpresent" != "$remote" ]; then {  \
            echo "! Branch $branch already present localy with a different remote than $remote"; \
            echo "! Creating a local branch $branch-$remote with a different name than the remote."; \
            echo "! Use \"git push $remote $branch-$remote:$branch\" to push in it."; \
            git branch $branch-$remote $remote/$branch; \
            branch="$branch-$remote"; \
        } fi; \
        git checkout $branch; \
        echo "Switched to $remote/$branch"; \
    }; f"
    # expected format: git rem-br odoo:my-master
    # clean after a git get-br
    # source : https://github.com/mart-e/odoo-scripts/blob/master/git/config#L74-L86
    rem-br = "!f() {\
        remote=`echo $1 | cut -d ":" -f1`; \
        branch=`echo $1 | cut -d ":" -f2`; \
        current=`git symbolic-ref -q --short HEAD`; \
        if [ "$current" = "$branch" ]; then {  \
            echo "Checkout in a different branch before removing $branch"; \
            exit;  \
        } fi; \
        git branch -D $branch; \
        git remote remove $remote; \
    }; f"
[commit]
	verbose = true
	gpgsign = false
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[checkout]
	defaultRemote = origin
[gpg]
	program = gpg
[rebase]
	autoSquash = true
[pull]
	rebase = true
